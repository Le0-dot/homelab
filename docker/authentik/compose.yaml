services:
  server:
    image: ghcr.io/goauthentik/server:2024.12.0
    container_name: authentik
    restart: unless-stopped
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__NAME=${DB_NAME:?}
      - AUTHENTIK_POSTGRESQL__USER=${DB_USERNAME:?}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${DB_PASSWORD:?}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY:?}
    volumes:
      - media:/media
      - custom-templates:/templates
    ports:
      - 9000:9000
      - 9443:9443
    depends_on:
      - postgresql
      - redis
  worker:
    image: ghcr.io/goauthentik/server:2024.12.0
    restart: unless-stopped
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__NAME=${DB_NAME:?}
      - AUTHENTIK_POSTGRESQL__USER=${DB_USERNAME:?}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${DB_PASSWORD:?}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY:?}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - media:/media
      - certs:/certs
      - custom-templates:/templates
    depends_on:
      - postgresql
      - redis
  postgresql:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME:?}
      POSTGRES_USER: ${DB_USERNAME:?}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?}
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - redis-cli ping | grep PONG
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data

volumes:
  media:
  custom-templates:
  certs:
  db:
  redis:
